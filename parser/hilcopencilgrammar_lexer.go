// Code generated from HilcoPencilGrammarLexer.g4 by ANTLR 4.9. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 52, 403,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 4, 53, 9, 53, 4, 54, 9, 54,
	4, 55, 9, 55, 4, 56, 9, 56, 4, 57, 9, 57, 4, 58, 9, 58, 4, 59, 9, 59, 3,
	2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4, 3, 4, 3,
	4, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3,
	6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3,
	8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10,
	3, 10, 3, 11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3,
	14, 3, 14, 3, 15, 3, 15, 3, 16, 3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19,
	3, 19, 3, 20, 3, 20, 3, 20, 3, 21, 3, 21, 3, 22, 3, 22, 3, 22, 3, 23, 3,
	23, 3, 24, 3, 24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 25, 3, 26, 3, 26, 3, 26,
	3, 27, 3, 27, 3, 28, 3, 28, 3, 29, 3, 29, 3, 30, 3, 30, 3, 31, 3, 31, 3,
	32, 3, 32, 3, 33, 3, 33, 3, 34, 3, 34, 3, 35, 3, 35, 3, 36, 3, 36, 3, 37,
	3, 37, 3, 38, 3, 38, 3, 39, 3, 39, 3, 39, 3, 39, 3, 39, 3, 40, 3, 40, 3,
	40, 3, 40, 3, 40, 3, 40, 3, 41, 3, 41, 3, 41, 3, 41, 3, 42, 3, 42, 3, 43,
	3, 43, 3, 44, 3, 44, 3, 45, 3, 45, 3, 45, 3, 45, 3, 45, 7, 45, 260, 10,
	45, 12, 45, 14, 45, 263, 11, 45, 3, 46, 3, 46, 3, 46, 3, 46, 3, 46, 3,
	46, 3, 46, 7, 46, 272, 10, 46, 12, 46, 14, 46, 275, 11, 46, 3, 47, 3, 47,
	3, 47, 5, 47, 280, 10, 47, 3, 47, 3, 47, 3, 47, 7, 47, 285, 10, 47, 12,
	47, 14, 47, 288, 11, 47, 3, 48, 6, 48, 291, 10, 48, 13, 48, 14, 48, 292,
	3, 49, 3, 49, 3, 49, 7, 49, 298, 10, 49, 12, 49, 14, 49, 301, 11, 49, 3,
	49, 3, 49, 3, 50, 6, 50, 306, 10, 50, 13, 50, 14, 50, 307, 3, 50, 3, 50,
	7, 50, 312, 10, 50, 12, 50, 14, 50, 315, 11, 50, 3, 51, 3, 51, 5, 51, 319,
	10, 51, 3, 51, 3, 51, 3, 52, 3, 52, 3, 52, 3, 52, 3, 52, 3, 52, 3, 52,
	3, 52, 3, 52, 5, 52, 332, 10, 52, 3, 52, 3, 52, 5, 52, 336, 10, 52, 3,
	52, 3, 52, 5, 52, 340, 10, 52, 5, 52, 342, 10, 52, 3, 52, 3, 52, 3, 52,
	3, 52, 3, 52, 3, 52, 5, 52, 350, 10, 52, 3, 52, 3, 52, 3, 53, 3, 53, 5,
	53, 356, 10, 53, 3, 53, 6, 53, 359, 10, 53, 13, 53, 14, 53, 360, 3, 54,
	3, 54, 3, 55, 3, 55, 3, 55, 3, 55, 5, 55, 369, 10, 55, 3, 56, 3, 56, 3,
	56, 3, 56, 3, 56, 3, 56, 3, 56, 3, 56, 3, 56, 5, 56, 380, 10, 56, 3, 57,
	3, 57, 3, 57, 3, 57, 3, 57, 3, 57, 3, 57, 3, 58, 5, 58, 390, 10, 58, 3,
	58, 3, 58, 3, 58, 3, 58, 3, 59, 3, 59, 3, 59, 3, 59, 5, 59, 400, 10, 59,
	3, 59, 3, 59, 2, 2, 60, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17,
	10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35,
	19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26, 51, 27, 53,
	28, 55, 29, 57, 30, 59, 31, 61, 32, 63, 33, 65, 34, 67, 35, 69, 36, 71,
	37, 73, 38, 75, 39, 77, 40, 79, 41, 81, 42, 83, 2, 85, 2, 87, 2, 89, 43,
	91, 44, 93, 45, 95, 46, 97, 47, 99, 48, 101, 49, 103, 50, 105, 2, 107,
	2, 109, 2, 111, 2, 113, 2, 115, 51, 117, 52, 3, 2, 9, 4, 2, 41, 41, 94,
	94, 4, 2, 47, 47, 49, 49, 4, 2, 71, 71, 103, 103, 4, 2, 45, 45, 47, 47,
	5, 2, 50, 59, 67, 72, 99, 104, 10, 2, 36, 36, 41, 41, 94, 94, 100, 100,
	104, 104, 112, 112, 116, 116, 118, 118, 5, 2, 11, 11, 14, 14, 34, 34, 2,
	428, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2,
	2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3,
	2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25,
	3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2,
	33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2,
	2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2,
	2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2,
	2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3,
	2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71,
	3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 75, 3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2,
	79, 3, 2, 2, 2, 2, 81, 3, 2, 2, 2, 2, 89, 3, 2, 2, 2, 2, 91, 3, 2, 2, 2,
	2, 93, 3, 2, 2, 2, 2, 95, 3, 2, 2, 2, 2, 97, 3, 2, 2, 2, 2, 99, 3, 2, 2,
	2, 2, 101, 3, 2, 2, 2, 2, 103, 3, 2, 2, 2, 2, 115, 3, 2, 2, 2, 2, 117,
	3, 2, 2, 2, 3, 119, 3, 2, 2, 2, 5, 122, 3, 2, 2, 2, 7, 127, 3, 2, 2, 2,
	9, 135, 3, 2, 2, 2, 11, 138, 3, 2, 2, 2, 13, 145, 3, 2, 2, 2, 15, 155,
	3, 2, 2, 2, 17, 158, 3, 2, 2, 2, 19, 163, 3, 2, 2, 2, 21, 168, 3, 2, 2,
	2, 23, 171, 3, 2, 2, 2, 25, 173, 3, 2, 2, 2, 27, 177, 3, 2, 2, 2, 29, 179,
	3, 2, 2, 2, 31, 181, 3, 2, 2, 2, 33, 183, 3, 2, 2, 2, 35, 185, 3, 2, 2,
	2, 37, 187, 3, 2, 2, 2, 39, 189, 3, 2, 2, 2, 41, 192, 3, 2, 2, 2, 43, 194,
	3, 2, 2, 2, 45, 197, 3, 2, 2, 2, 47, 199, 3, 2, 2, 2, 49, 202, 3, 2, 2,
	2, 51, 206, 3, 2, 2, 2, 53, 209, 3, 2, 2, 2, 55, 211, 3, 2, 2, 2, 57, 213,
	3, 2, 2, 2, 59, 215, 3, 2, 2, 2, 61, 217, 3, 2, 2, 2, 63, 219, 3, 2, 2,
	2, 65, 221, 3, 2, 2, 2, 67, 223, 3, 2, 2, 2, 69, 225, 3, 2, 2, 2, 71, 227,
	3, 2, 2, 2, 73, 229, 3, 2, 2, 2, 75, 231, 3, 2, 2, 2, 77, 233, 3, 2, 2,
	2, 79, 238, 3, 2, 2, 2, 81, 244, 3, 2, 2, 2, 83, 248, 3, 2, 2, 2, 85, 250,
	3, 2, 2, 2, 87, 252, 3, 2, 2, 2, 89, 254, 3, 2, 2, 2, 91, 264, 3, 2, 2,
	2, 93, 276, 3, 2, 2, 2, 95, 290, 3, 2, 2, 2, 97, 294, 3, 2, 2, 2, 99, 305,
	3, 2, 2, 2, 101, 318, 3, 2, 2, 2, 103, 322, 3, 2, 2, 2, 105, 353, 3, 2,
	2, 2, 107, 362, 3, 2, 2, 2, 109, 368, 3, 2, 2, 2, 111, 379, 3, 2, 2, 2,
	113, 381, 3, 2, 2, 2, 115, 389, 3, 2, 2, 2, 117, 399, 3, 2, 2, 2, 119,
	120, 7, 60, 2, 2, 120, 121, 7, 63, 2, 2, 121, 4, 3, 2, 2, 2, 122, 123,
	7, 101, 2, 2, 123, 124, 7, 99, 2, 2, 124, 125, 7, 117, 2, 2, 125, 126,
	7, 103, 2, 2, 126, 6, 3, 2, 2, 2, 127, 128, 7, 103, 2, 2, 128, 129, 7,
	112, 2, 2, 129, 130, 7, 102, 2, 2, 130, 131, 7, 101, 2, 2, 131, 132, 7,
	99, 2, 2, 132, 133, 7, 117, 2, 2, 133, 134, 7, 103, 2, 2, 134, 8, 3, 2,
	2, 2, 135, 136, 7, 107, 2, 2, 136, 137, 7, 117, 2, 2, 137, 10, 3, 2, 2,
	2, 138, 139, 7, 117, 2, 2, 139, 140, 7, 121, 2, 2, 140, 141, 7, 107, 2,
	2, 141, 142, 7, 118, 2, 2, 142, 143, 7, 101, 2, 2, 143, 144, 7, 106, 2,
	2, 144, 12, 3, 2, 2, 2, 145, 146, 7, 103, 2, 2, 146, 147, 7, 112, 2, 2,
	147, 148, 7, 102, 2, 2, 148, 149, 7, 117, 2, 2, 149, 150, 7, 121, 2, 2,
	150, 151, 7, 107, 2, 2, 151, 152, 7, 118, 2, 2, 152, 153, 7, 101, 2, 2,
	153, 154, 7, 106, 2, 2, 154, 14, 3, 2, 2, 2, 155, 156, 7, 107, 2, 2, 156,
	157, 7, 104, 2, 2, 157, 16, 3, 2, 2, 2, 158, 159, 7, 118, 2, 2, 159, 160,
	7, 106, 2, 2, 160, 161, 7, 103, 2, 2, 161, 162, 7, 112, 2, 2, 162, 18,
	3, 2, 2, 2, 163, 164, 7, 103, 2, 2, 164, 165, 7, 110, 2, 2, 165, 166, 7,
	117, 2, 2, 166, 167, 7, 103, 2, 2, 167, 20, 3, 2, 2, 2, 168, 169, 7, 60,
	2, 2, 169, 170, 7, 60, 2, 2, 170, 22, 3, 2, 2, 2, 171, 172, 7, 61, 2, 2,
	172, 24, 3, 2, 2, 2, 173, 174, 7, 80, 2, 2, 174, 175, 7, 81, 2, 2, 175,
	176, 7, 86, 2, 2, 176, 26, 3, 2, 2, 2, 177, 178, 7, 96, 2, 2, 178, 28,
	3, 2, 2, 2, 179, 180, 7, 44, 2, 2, 180, 30, 3, 2, 2, 2, 181, 182, 7, 49,
	2, 2, 182, 32, 3, 2, 2, 2, 183, 184, 7, 45, 2, 2, 184, 34, 3, 2, 2, 2,
	185, 186, 7, 47, 2, 2, 186, 36, 3, 2, 2, 2, 187, 188, 7, 64, 2, 2, 188,
	38, 3, 2, 2, 2, 189, 190, 7, 64, 2, 2, 190, 191, 7, 63, 2, 2, 191, 40,
	3, 2, 2, 2, 192, 193, 7, 62, 2, 2, 193, 42, 3, 2, 2, 2, 194, 195, 7, 62,
	2, 2, 195, 196, 7, 63, 2, 2, 196, 44, 3, 2, 2, 2, 197, 198, 7, 63, 2, 2,
	198, 46, 3, 2, 2, 2, 199, 200, 7, 128, 2, 2, 200, 201, 7, 63, 2, 2, 201,
	48, 3, 2, 2, 2, 202, 203, 7, 67, 2, 2, 203, 204, 7, 80, 2, 2, 204, 205,
	7, 70, 2, 2, 205, 50, 3, 2, 2, 2, 206, 207, 7, 81, 2, 2, 207, 208, 7, 84,
	2, 2, 208, 52, 3, 2, 2, 2, 209, 210, 7, 60, 2, 2, 210, 54, 3, 2, 2, 2,
	211, 212, 7, 93, 2, 2, 212, 56, 3, 2, 2, 2, 213, 214, 7, 95, 2, 2, 214,
	58, 3, 2, 2, 2, 215, 216, 7, 125, 2, 2, 216, 60, 3, 2, 2, 2, 217, 218,
	7, 127, 2, 2, 218, 62, 3, 2, 2, 2, 219, 220, 7, 42, 2, 2, 220, 64, 3, 2,
	2, 2, 221, 222, 7, 43, 2, 2, 222, 66, 3, 2, 2, 2, 223, 224, 7, 97, 2, 2,
	224, 68, 3, 2, 2, 2, 225, 226, 7, 39, 2, 2, 226, 70, 3, 2, 2, 2, 227, 228,
	7, 66, 2, 2, 228, 72, 3, 2, 2, 2, 229, 230, 7, 46, 2, 2, 230, 74, 3, 2,
	2, 2, 231, 232, 7, 48, 2, 2, 232, 76, 3, 2, 2, 2, 233, 234, 7, 118, 2,
	2, 234, 235, 7, 116, 2, 2, 235, 236, 7, 119, 2, 2, 236, 237, 7, 103, 2,
	2, 237, 78, 3, 2, 2, 2, 238, 239, 7, 104, 2, 2, 239, 240, 7, 99, 2, 2,
	240, 241, 7, 110, 2, 2, 241, 242, 7, 117, 2, 2, 242, 243, 7, 103, 2, 2,
	243, 80, 3, 2, 2, 2, 244, 245, 7, 112, 2, 2, 245, 246, 7, 107, 2, 2, 246,
	247, 7, 110, 2, 2, 247, 82, 3, 2, 2, 2, 248, 249, 4, 50, 59, 2, 249, 84,
	3, 2, 2, 2, 250, 251, 4, 99, 124, 2, 251, 86, 3, 2, 2, 2, 252, 253, 4,
	67, 92, 2, 253, 88, 3, 2, 2, 2, 254, 261, 5, 87, 44, 2, 255, 260, 5, 85,
	43, 2, 256, 260, 5, 87, 44, 2, 257, 260, 5, 83, 42, 2, 258, 260, 5, 67,
	34, 2, 259, 255, 3, 2, 2, 2, 259, 256, 3, 2, 2, 2, 259, 257, 3, 2, 2, 2,
	259, 258, 3, 2, 2, 2, 260, 263, 3, 2, 2, 2, 261, 259, 3, 2, 2, 2, 261,
	262, 3, 2, 2, 2, 262, 90, 3, 2, 2, 2, 263, 261, 3, 2, 2, 2, 264, 273, 5,
	85, 43, 2, 265, 272, 5, 85, 43, 2, 266, 272, 5, 87, 44, 2, 267, 272, 5,
	83, 42, 2, 268, 272, 5, 67, 34, 2, 269, 272, 5, 53, 27, 2, 270, 272, 7,
	94, 2, 2, 271, 265, 3, 2, 2, 2, 271, 266, 3, 2, 2, 2, 271, 267, 3, 2, 2,
	2, 271, 268, 3, 2, 2, 2, 271, 269, 3, 2, 2, 2, 271, 270, 3, 2, 2, 2, 272,
	275, 3, 2, 2, 2, 273, 271, 3, 2, 2, 2, 273, 274, 3, 2, 2, 2, 274, 92, 3,
	2, 2, 2, 275, 273, 3, 2, 2, 2, 276, 279, 5, 71, 36, 2, 277, 280, 5, 85,
	43, 2, 278, 280, 5, 87, 44, 2, 279, 277, 3, 2, 2, 2, 279, 278, 3, 2, 2,
	2, 280, 286, 3, 2, 2, 2, 281, 285, 5, 85, 43, 2, 282, 285, 5, 87, 44, 2,
	283, 285, 5, 83, 42, 2, 284, 281, 3, 2, 2, 2, 284, 282, 3, 2, 2, 2, 284,
	283, 3, 2, 2, 2, 285, 288, 3, 2, 2, 2, 286, 284, 3, 2, 2, 2, 286, 287,
	3, 2, 2, 2, 287, 94, 3, 2, 2, 2, 288, 286, 3, 2, 2, 2, 289, 291, 5, 83,
	42, 2, 290, 289, 3, 2, 2, 2, 291, 292, 3, 2, 2, 2, 292, 290, 3, 2, 2, 2,
	292, 293, 3, 2, 2, 2, 293, 96, 3, 2, 2, 2, 294, 299, 7, 41, 2, 2, 295,
	298, 5, 109, 55, 2, 296, 298, 10, 2, 2, 2, 297, 295, 3, 2, 2, 2, 297, 296,
	3, 2, 2, 2, 298, 301, 3, 2, 2, 2, 299, 297, 3, 2, 2, 2, 299, 300, 3, 2,
	2, 2, 300, 302, 3, 2, 2, 2, 301, 299, 3, 2, 2, 2, 302, 303, 7, 41, 2, 2,
	303, 98, 3, 2, 2, 2, 304, 306, 5, 83, 42, 2, 305, 304, 3, 2, 2, 2, 306,
	307, 3, 2, 2, 2, 307, 305, 3, 2, 2, 2, 307, 308, 3, 2, 2, 2, 308, 309,
	3, 2, 2, 2, 309, 313, 7, 48, 2, 2, 310, 312, 5, 83, 42, 2, 311, 310, 3,
	2, 2, 2, 312, 315, 3, 2, 2, 2, 313, 311, 3, 2, 2, 2, 313, 314, 3, 2, 2,
	2, 314, 100, 3, 2, 2, 2, 315, 313, 3, 2, 2, 2, 316, 319, 5, 95, 48, 2,
	317, 319, 5, 99, 50, 2, 318, 316, 3, 2, 2, 2, 318, 317, 3, 2, 2, 2, 319,
	320, 3, 2, 2, 2, 320, 321, 5, 69, 35, 2, 321, 102, 3, 2, 2, 2, 322, 323,
	5, 59, 30, 2, 323, 324, 5, 83, 42, 2, 324, 325, 5, 83, 42, 2, 325, 341,
	9, 3, 2, 2, 326, 327, 5, 83, 42, 2, 327, 328, 5, 83, 42, 2, 328, 342, 3,
	2, 2, 2, 329, 332, 5, 85, 43, 2, 330, 332, 5, 87, 44, 2, 331, 329, 3, 2,
	2, 2, 331, 330, 3, 2, 2, 2, 332, 335, 3, 2, 2, 2, 333, 336, 5, 85, 43,
	2, 334, 336, 5, 87, 44, 2, 335, 333, 3, 2, 2, 2, 335, 334, 3, 2, 2, 2,
	336, 339, 3, 2, 2, 2, 337, 340, 5, 85, 43, 2, 338, 340, 5, 87, 44, 2, 339,
	337, 3, 2, 2, 2, 339, 338, 3, 2, 2, 2, 340, 342, 3, 2, 2, 2, 341, 326,
	3, 2, 2, 2, 341, 331, 3, 2, 2, 2, 342, 343, 3, 2, 2, 2, 343, 344, 9, 3,
	2, 2, 344, 345, 5, 83, 42, 2, 345, 349, 5, 83, 42, 2, 346, 347, 5, 83,
	42, 2, 347, 348, 5, 83, 42, 2, 348, 350, 3, 2, 2, 2, 349, 346, 3, 2, 2,
	2, 349, 350, 3, 2, 2, 2, 350, 351, 3, 2, 2, 2, 351, 352, 5, 61, 31, 2,
	352, 104, 3, 2, 2, 2, 353, 355, 9, 4, 2, 2, 354, 356, 9, 5, 2, 2, 355,
	354, 3, 2, 2, 2, 355, 356, 3, 2, 2, 2, 356, 358, 3, 2, 2, 2, 357, 359,
	4, 50, 59, 2, 358, 357, 3, 2, 2, 2, 359, 360, 3, 2, 2, 2, 360, 358, 3,
	2, 2, 2, 360, 361, 3, 2, 2, 2, 361, 106, 3, 2, 2, 2, 362, 363, 9, 6, 2,
	2, 363, 108, 3, 2, 2, 2, 364, 365, 7, 94, 2, 2, 365, 369, 9, 7, 2, 2, 366,
	369, 5, 113, 57, 2, 367, 369, 5, 111, 56, 2, 368, 364, 3, 2, 2, 2, 368,
	366, 3, 2, 2, 2, 368, 367, 3, 2, 2, 2, 369, 110, 3, 2, 2, 2, 370, 371,
	7, 94, 2, 2, 371, 372, 4, 50, 53, 2, 372, 373, 4, 50, 57, 2, 373, 380,
	4, 50, 57, 2, 374, 375, 7, 94, 2, 2, 375, 376, 4, 50, 57, 2, 376, 380,
	4, 50, 57, 2, 377, 378, 7, 94, 2, 2, 378, 380, 4, 50, 57, 2, 379, 370,
	3, 2, 2, 2, 379, 374, 3, 2, 2, 2, 379, 377, 3, 2, 2, 2, 380, 112, 3, 2,
	2, 2, 381, 382, 7, 94, 2, 2, 382, 383, 7, 119, 2, 2, 383, 384, 5, 107,
	54, 2, 384, 385, 5, 107, 54, 2, 385, 386, 5, 107, 54, 2, 386, 387, 5, 107,
	54, 2, 387, 114, 3, 2, 2, 2, 388, 390, 7, 15, 2, 2, 389, 388, 3, 2, 2,
	2, 389, 390, 3, 2, 2, 2, 390, 391, 3, 2, 2, 2, 391, 392, 7, 12, 2, 2, 392,
	393, 3, 2, 2, 2, 393, 394, 8, 58, 2, 2, 394, 116, 3, 2, 2, 2, 395, 400,
	9, 8, 2, 2, 396, 397, 7, 15, 2, 2, 397, 400, 7, 12, 2, 2, 398, 400, 7,
	5, 2, 2, 399, 395, 3, 2, 2, 2, 399, 396, 3, 2, 2, 2, 399, 398, 3, 2, 2,
	2, 400, 401, 3, 2, 2, 2, 401, 402, 8, 59, 2, 2, 402, 118, 3, 2, 2, 2, 27,
	2, 259, 261, 271, 273, 279, 284, 286, 292, 297, 299, 307, 313, 318, 331,
	335, 339, 341, 349, 355, 360, 368, 379, 389, 399, 3, 2, 3, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "':='", "'case'", "'endcase'", "'is'", "'switch'", "'endswitch'", "'if'",
	"'then'", "'else'", "'::'", "';'", "'NOT'", "'^'", "'*'", "'/'", "'+'",
	"'-'", "'>'", "'>='", "'<'", "'<='", "'='", "'~='", "'AND'", "'OR'", "':'",
	"'['", "']'", "'{'", "'}'", "'('", "')'", "'_'", "'%'", "'@'", "','", "'.'",
	"'true'", "'false'", "'nil'",
}

var lexerSymbolicNames = []string{
	"", "ASSIGNMENT", "CASE", "END_CASE", "IS", "SWITCH", "END_SWITCH", "IF",
	"THEN", "ELSE", "DOUBLE_COLON", "SEMI_COLON", "NOT", "EXPONENTIAL", "MULTIPLY",
	"DIVIDE", "ADD", "MINUS", "GREATER_THAN", "GREATER_THAN_EQUAL", "LESS_THAN",
	"LESS_THAN_EQUAL", "EQUAL", "NOT_EQUAL", "AND", "OR", "COLON", "LBRACKET",
	"RBRACKET", "CURLYLBRACKET", "CURLYRBRACKET", "LPAREN", "RPAREN", "UNDERSCORE",
	"PERCENT_SIGN", "AT_SIGN", "COMMA", "DOT", "KEYWORD_TRUE", "KEYWORD_FALSE",
	"KEYWORD_NIL", "CLASSNAME", "ID", "ATFUNCTION", "INT", "STRING", "FLOAT",
	"PERCENT", "DATE", "NEWLINE", "WS",
}

var lexerRuleNames = []string{
	"ASSIGNMENT", "CASE", "END_CASE", "IS", "SWITCH", "END_SWITCH", "IF", "THEN",
	"ELSE", "DOUBLE_COLON", "SEMI_COLON", "NOT", "EXPONENTIAL", "MULTIPLY",
	"DIVIDE", "ADD", "MINUS", "GREATER_THAN", "GREATER_THAN_EQUAL", "LESS_THAN",
	"LESS_THAN_EQUAL", "EQUAL", "NOT_EQUAL", "AND", "OR", "COLON", "LBRACKET",
	"RBRACKET", "CURLYLBRACKET", "CURLYRBRACKET", "LPAREN", "RPAREN", "UNDERSCORE",
	"PERCENT_SIGN", "AT_SIGN", "COMMA", "DOT", "KEYWORD_TRUE", "KEYWORD_FALSE",
	"KEYWORD_NIL", "DIGIT", "LOWERCASELETTERS", "UPPERCASELETTERS", "CLASSNAME",
	"ID", "ATFUNCTION", "INT", "STRING", "FLOAT", "PERCENT", "DATE", "EXPONENT",
	"HEX_DIGIT", "ESC_SEQ", "OCTAL_ESC", "UNICODE_ESC", "NEWLINE", "WS",
}

type HilcoPencilGrammarLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewHilcoPencilGrammarLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *HilcoPencilGrammarLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewHilcoPencilGrammarLexer(input antlr.CharStream) *HilcoPencilGrammarLexer {
	l := new(HilcoPencilGrammarLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "HilcoPencilGrammarLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// HilcoPencilGrammarLexer tokens.
const (
	HilcoPencilGrammarLexerASSIGNMENT         = 1
	HilcoPencilGrammarLexerCASE               = 2
	HilcoPencilGrammarLexerEND_CASE           = 3
	HilcoPencilGrammarLexerIS                 = 4
	HilcoPencilGrammarLexerSWITCH             = 5
	HilcoPencilGrammarLexerEND_SWITCH         = 6
	HilcoPencilGrammarLexerIF                 = 7
	HilcoPencilGrammarLexerTHEN               = 8
	HilcoPencilGrammarLexerELSE               = 9
	HilcoPencilGrammarLexerDOUBLE_COLON       = 10
	HilcoPencilGrammarLexerSEMI_COLON         = 11
	HilcoPencilGrammarLexerNOT                = 12
	HilcoPencilGrammarLexerEXPONENTIAL        = 13
	HilcoPencilGrammarLexerMULTIPLY           = 14
	HilcoPencilGrammarLexerDIVIDE             = 15
	HilcoPencilGrammarLexerADD                = 16
	HilcoPencilGrammarLexerMINUS              = 17
	HilcoPencilGrammarLexerGREATER_THAN       = 18
	HilcoPencilGrammarLexerGREATER_THAN_EQUAL = 19
	HilcoPencilGrammarLexerLESS_THAN          = 20
	HilcoPencilGrammarLexerLESS_THAN_EQUAL    = 21
	HilcoPencilGrammarLexerEQUAL              = 22
	HilcoPencilGrammarLexerNOT_EQUAL          = 23
	HilcoPencilGrammarLexerAND                = 24
	HilcoPencilGrammarLexerOR                 = 25
	HilcoPencilGrammarLexerCOLON              = 26
	HilcoPencilGrammarLexerLBRACKET           = 27
	HilcoPencilGrammarLexerRBRACKET           = 28
	HilcoPencilGrammarLexerCURLYLBRACKET      = 29
	HilcoPencilGrammarLexerCURLYRBRACKET      = 30
	HilcoPencilGrammarLexerLPAREN             = 31
	HilcoPencilGrammarLexerRPAREN             = 32
	HilcoPencilGrammarLexerUNDERSCORE         = 33
	HilcoPencilGrammarLexerPERCENT_SIGN       = 34
	HilcoPencilGrammarLexerAT_SIGN            = 35
	HilcoPencilGrammarLexerCOMMA              = 36
	HilcoPencilGrammarLexerDOT                = 37
	HilcoPencilGrammarLexerKEYWORD_TRUE       = 38
	HilcoPencilGrammarLexerKEYWORD_FALSE      = 39
	HilcoPencilGrammarLexerKEYWORD_NIL        = 40
	HilcoPencilGrammarLexerCLASSNAME          = 41
	HilcoPencilGrammarLexerID                 = 42
	HilcoPencilGrammarLexerATFUNCTION         = 43
	HilcoPencilGrammarLexerINT                = 44
	HilcoPencilGrammarLexerSTRING             = 45
	HilcoPencilGrammarLexerFLOAT              = 46
	HilcoPencilGrammarLexerPERCENT            = 47
	HilcoPencilGrammarLexerDATE               = 48
	HilcoPencilGrammarLexerNEWLINE            = 49
	HilcoPencilGrammarLexerWS                 = 50
)
